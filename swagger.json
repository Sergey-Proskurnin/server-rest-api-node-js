{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "server-contacts-rest-api",
    "description": "Showing off server-contacts-rest-api",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json",
    "text/plain",
    "multipart/form-data",
    "image/*"
  ],
  "produces": ["application/json", "text/plain", "application/xml"],
  "servers": [
    { "url": "https://server-contacts-rest-api.herokuapp.com/api/v1" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Contacts",
      "description": "Contacts endpoints"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Register's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterError"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorResponse"
                }
              }
            }
          },
          "401 ": {
            "description": "User has not verified his email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorVerifiedResponse"
                }
              }
            }
          },
          "500 ": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User current. Check the token in the request header!",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "User email verify",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": true,
            "type": "string",
            "description": "User's verify token"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerifyResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseUserVerify"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "User email repeat verify",
        "parameters": [],
        "requestBody": {
          "description": "User email object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatVerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRepeatVerifyResponse"
                }
              }
            }
          },
          "409": {
            "description": "Verification has already been passed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseUserRepeatVerify"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication. WARNING: Works only for sign-in, after registered on front-end (if you're writing your back-end for a SPECIFIC front-end, then you can configure it right to work both for sign-up & sign-in)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken, refreshToken and sid in query). Then use GET /user",
            "content": {}
          },
          "403": {
            "description": "Not registered",
            "content": {}
          }
        }
      }
    },
    "/users/facebook": {
      "get": {
        "tags": ["Auth"],
        "summary": "Facebook authentication. WARNING: Works only for sign-in, after registered on front-end (if you're writing your back-end for a SPECIFIC front-end, then you can configure it right to work both for sign-up & sign-in)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken, refreshToken and sid in query). Then use GET /user",
            "content": {}
          },
          "403": {
            "description": "Not registered",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User's avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Refresh token. Change Bearer RefreshToken on header request!",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User's subscription",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Available subscriptions for User: 'starter', 'pro' and 'business'",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/": {
      "get": {
        "tags": ["Contacts"],
        "summary": "User's all contacts",
        "parameters": [
          {
            "in": "query",
            "name": "favorite",
            "required": false,
            "type": "boolean",
            "description": "Favorite user contacts"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllContactsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Create contact",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Contact's information",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddContactResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get user contact by id",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "type": "string",
            "description": "User's contact id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactIdDel}": {
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete user contact by id",
        "parameters": [
          {
            "in": "path",
            "name": "contactIdDel",
            "required": true,
            "type": "string",
            "description": "User's contact id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdDeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactIdUpdate}": {
      "put": {
        "tags": ["Contacts"],
        "summary": "Update user contact by id",
        "parameters": [
          {
            "in": "path",
            "name": "contactIdUpdate",
            "required": true,
            "type": "string",
            "description": "User's contact id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Contact's information",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contactId}/favorite": {
      "patch": {
        "tags": ["Contacts"],
        "summary": "Update status contact by id",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "type": "string",
            "description": "User's contact id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Favorite contact",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFavoriteContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "201",
            "example": "201"
          },
          "user": {
            "type": "object",
            "description": "User's credential",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "User"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar",
                "example": null
              },
              "verifyToken": {
                "type": "string",
                "description": "User's verify token",
                "example": "882be0aa-c089-4c38-a7a5-38e06b8f4a89"
              }
            }
          }
        }
      },
      "RegisterError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "409",
            "example": "409"
          },
          "message": {
            "type": "string",
            "description": "Email in use",
            "example": "Email in use"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "200",
            "example": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiTWFtYSdzIGhhY2tlciI6IldlbGwsIHdoeSBkaWQgeW91IGNsaW1iIGhlcmUiLCJpYXQiOjE1MTYyMzkwMjJ9.GV-Etxg3MNXNP-omtkJGGjvnCTBERkC_x1G9G8QsGUY"
              },
              "refreshToken": {
                "type": "string",
                "description": "User's refresh token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiTWFtYSdzIGhhY2tlciI6IldlbGwsIHdoeSBkaWQgeW91IGNsaW1iIGhlcmUiLCJyaWF0IjoxNTE2MjM5MDIyfQ.bk5Q7DREsi7uotZfQtsLFIY_v9ePQ8nyTXf-SvJlQ-A"
              },
              "user": {
                "type": "object",
                "description": "User's credential",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "User"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User's avatar",
                    "example": null
                  }
                }
              }
            }
          }
        }
      },
      "LoginErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "401",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "Email or password is wrong",
            "example": "Email or password is wrong"
          }
        }
      },
      "LoginErrorVerifiedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "401",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "User has not verified his email",
            "example": "User has not verified his email"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "user": {
            "type": "object",
            "description": "User's credential",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar"
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "Error code",
            "example": "500"
          },
          "message": {
            "type": "string",
            "description": "Massage error server",
            "example": "Server error"
          }
        }
      },
      "NotFoundErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "404",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "Not found",
            "example": "Not found"
          }
        }
      },
      "UserVerifyResponse": {
        "type": "string",
        "properties": {
          "message": {
            "type": "string",
            "description": "Email verify",
            "example": "Congratulations, your email has been successfully verified, go to the login page in the phone book and enter your email and password."
          }
        }
      },
      "ErrorResponseUserVerify": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "404",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "User not found",
            "example": "User not found"
          }
        }
      },
      "RepeatVerifyRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "UserRepeatVerifyResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Verification email sent",
                "example": "Verification email sent"
              }
            }
          }
        }
      },
      "ErrorResponseUserRepeatVerify": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "409",
            "example": "409"
          },
          "message": {
            "type": "string",
            "description": "Verification has already been passed",
            "example": "Verification has already been passed"
          }
        }
      },
      "AvatarRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Image avatar"
          }
        }
      },
      "UserAvatarResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "description": "User's credential",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User's avatar"
                  }
                }
              }
            }
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "data": {
            "type": "object",
            "description": "User's credential",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's token"
              },
              "refreshToken": {
                "type": "string",
                "description": "User's refresh token"
              },
              "user": {
                "type": "object",
                "description": "User's credential",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "avatarURL": {
                    "type": "string",
                    "description": "User's avatar"
                  }
                }
              }
            }
          }
        }
      },
      "SubscriptionRequest": {
        "type": "object",
        "required": ["subscription"],
        "properties": {
          "subscription": {
            "type": "string",
            "description": "User's subscription",
            "example": "business"
          }
        }
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "data": {
            "type": "object",
            "description": "User's credential",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email"
              },
              "subscription": {
                "type": "string",
                "description": "User's subscription"
              }
            }
          }
        }
      },
      "SubscriptionErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "404",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "Not found",
            "example": "Not found"
          }
        }
      },
      "AllContactsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "200",
            "example": "200"
          },
          "data": {
            "type": "object",
            "description": "User's contacts",
            "properties": {
              "contacts": {
                "type": "array",
                "description": "User's contacts",
                "items": {
                  "type": "object",
                  "properties": {
                    "favorite": {
                      "type": "boolean",
                      "description": "Favorite contacts",
                      "example": true
                    },
                    "idCloudAvatarContact": {
                      "type": "string",
                      "description": "Id cloud avatar contact",
                      "example": "CloudAvatarsContacts/u1ytfbat501ksvbfsxds"
                    },
                    "avatarContactURL": {
                      "type": "string",
                      "description": "Url contact avatar",
                      "example": "https://res.cloudinary.com"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name contact",
                      "example": "Alexander Repeta"
                    },
                    "number": {
                      "type": "string",
                      "description": "Number contact",
                      "example": "777-77-77"
                    },
                    "email": {
                      "type": "string",
                      "description": "Email contact",
                      "example": "alexander.repeta@gmail.com"
                    },
                    "owner": {
                      "type": "object",
                      "description": "Owner contact",
                      "properties": {
                        "subscription": {
                          "type": "string",
                          "description": "Owner's subscription",
                          "example": "starter"
                        },
                        "email": {
                          "type": "string",
                          "description": "Owner's email",
                          "example": "user@example.com"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time created contact",
                      "example": "2021-11-19T20:06:12.928Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time updated contact",
                      "example": "2021-11-19T20:08:12.928Z"
                    },
                    "id": {
                      "type": "string",
                      "description": "Id contact",
                      "example": "619803b4bea2ab001dc01696"
                    }
                  }
                }
              },
              "totalDocs": {
                "type": "number",
                "description": "Total contacts",
                "example": 2
              },
              "limit": {
                "type": "number",
                "description": "Limit contacts on page",
                "example": 100
              },
              "totalPages": {
                "type": "number",
                "description": "Total contact pages",
                "example": 1
              },
              "page": {
                "type": "number",
                "description": "Page contacts",
                "example": 1
              },
              "pagingCounter": {
                "type": "number",
                "description": "Paging counter",
                "example": 1
              },
              "hasPrevPage": {
                "type": "boolean",
                "description": "Нas prev page",
                "example": false
              },
              "hasNextPage": {
                "type": "boolean",
                "description": "Нas next page",
                "example": false
              },
              "prevPage": {
                "type": "number",
                "description": "Prev page",
                "example": null
              },
              "nextPage": {
                "type": "number",
                "description": "Next page",
                "example": null
              }
            }
          }
        }
      },
      "ContactIdResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "Ok",
            "example": "200"
          },
          "data": {
            "type": "object",

            "properties": {
              "favorite": {
                "type": "boolean",
                "description": "Favorite contacts",
                "example": true
              },
              "idCloudAvatarContact": {
                "type": "string",
                "description": "Id cloud avatar contact",
                "example": "CloudAvatarsContacts/u1ytfbat501ksvbfsxds"
              },
              "avatarContactURL": {
                "type": "string",
                "description": "Url contact avatar",
                "example": "https://res.cloudinary.com"
              },
              "name": {
                "type": "string",
                "description": "Name contact",
                "example": "Alexander Repeta"
              },
              "number": {
                "type": "string",
                "description": "Number contact",
                "example": "777-77-77"
              },
              "email": {
                "type": "string",
                "description": "Email contact",
                "example": "alexander.repeta@gmail.com"
              },
              "owner": {
                "type": "object",
                "description": "Owner contact",
                "properties": {
                  "subscription": {
                    "type": "string",
                    "description": "Owner's subscription",
                    "example": "starter"
                  },
                  "email": {
                    "type": "string",
                    "description": "Owner's email",
                    "example": "user@example.com"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "description": "Time created contact",
                "example": "2021-11-19T20:06:12.928Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Time updated contact",
                "example": "2021-11-19T20:08:12.928Z"
              },
              "id": {
                "type": "string",
                "description": "Id contact",
                "example": "619803b4bea2ab001dc01696"
              }
            }
          }
        }
      },
      "ContactIdDeleteResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "200",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Contact deleted",
            "example": "Contact deleted"
          },
          "data": {
            "type": "object",

            "properties": {
              "favorite": {
                "type": "boolean",
                "description": "Favorite contacts",
                "example": true
              },
              "idCloudAvatarContact": {
                "type": "string",
                "description": "Id cloud avatar contact",
                "example": "CloudAvatarsContacts/u1ytfbat501ksvbfsxds"
              },
              "avatarContactURL": {
                "type": "string",
                "description": "Url contact avatar",
                "example": "https://res.cloudinary.com"
              },
              "name": {
                "type": "string",
                "description": "Name contact",
                "example": "Alexander Repeta"
              },
              "number": {
                "type": "string",
                "description": "Number contact",
                "example": "777-77-77"
              },
              "email": {
                "type": "string",
                "description": "Email contact",
                "example": "alexander.repeta@gmail.com"
              },
              "owner": {
                "type": "object",
                "description": "Owner contact",
                "properties": {
                  "subscription": {
                    "type": "string",
                    "description": "Owner's subscription",
                    "example": "starter"
                  },
                  "email": {
                    "type": "string",
                    "description": "Owner's email",
                    "example": "user@example.com"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "description": "Time created contact",
                "example": "2021-11-19T20:06:12.928Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Time updated contact",
                "example": "2021-11-19T20:08:12.928Z"
              },
              "id": {
                "type": "string",
                "description": "Id contact",
                "example": "619803b4bea2ab001dc01696"
              }
            }
          }
        }
      },
      "AddContactRequest": {
        "type": "object",
        "required": ["name", "email", "number"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact's name (min 3 and max 30 characters)",
            "example": "Alexandr Venik"
          },
          "email": {
            "type": "string",
            "description": "Contact's email",
            "format": "email",
            "example": "alexandrvenik@gmail.com"
          },
          "number": {
            "type": "string",
            "description": "Contact's number (min 3 and max 30 digits)",
            "example": "999-99-99"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Image avatar (format only 'jpg' and 'png')"
          }
        }
      },
      "AddContactResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success",
            "example": "success"
          },
          "code": {
            "type": "string",
            "description": "Created",
            "example": "201"
          },
          "data": {
            "type": "object",
            "properties": {
              "favorite": {
                "type": "boolean",
                "description": "Favorite contacts",
                "example": true
              },
              "idCloudAvatarContact": {
                "type": "string",
                "description": "Id cloud avatar contact",
                "example": "CloudAvatarsContacts/u1ytfbat501ksvbfsxds"
              },
              "avatarContactURL": {
                "type": "string",
                "description": "Url contact avatar",
                "example": "https://res.cloudinary.com"
              },
              "name": {
                "type": "string",
                "description": "Name contact",
                "example": "Alexandr Venik"
              },
              "number": {
                "type": "string",
                "description": "Number contact",
                "example": "999-99-99"
              },
              "email": {
                "type": "string",
                "description": "Email contact",
                "example": "alexandrvenik@gmail.com"
              },
              "owner": {
                "type": "object",
                "description": "Owner contact",
                "properties": {
                  "subscription": {
                    "type": "string",
                    "description": "Owner's subscription",
                    "example": "starter"
                  },
                  "email": {
                    "type": "string",
                    "description": "Owner's email",
                    "example": "user@example.com"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "description": "Time created contact",
                "example": "2021-11-19T21:06:12.928Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Time updated contact",
                "example": "2021-11-19T21:08:12.928Z"
              },
              "id": {
                "type": "string",
                "description": "Id contact",
                "example": "619803b4cea2aa001dc02897"
              }
            }
          }
        }
      },
      "UpdateFavoriteContactRequest": {
        "type": "object",
        "required": ["favorite"],
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "Contact's status",
            "example": true
          }
        }
      },
      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "401",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "Unvalid token",
            "example": "Unvalid token"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
